/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package superresolution;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.


/**
 *
 * @author hp
 */

import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.MediaTracker;
import java.awt.Rectangle;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.awt.image.MemoryImageSource;
import java.awt.image.PixelGrabber;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import javax.swing.JSlider;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;

public class CannyEdgeFrame extends javax.swing.JFrame {

    static int PixelArray[],EdgeArray[];
    CannyEdgeDetector eseg;
    Image outputImage;
    BufferedImage img,edge;
    MediaTracker tracker = null;
    PixelGrabber grabber = null;
    int width = 0, height = 0;
    //slider constraints
    double lowThreshold = 1.5f;
    double highThreshold = 7.5f;
    //boolean thresholdActive = false;
    int imageNumber = 0;
    public int orig[] = null;

    /**
     * Creates new form edgeSegFrame
     */
    public CannyEdgeFrame(int pixelArray[],BufferedImage img) {
        initComponents();
        lowthresh.setText("1.5");
        highthresh.setText("7.5");
        width = DemoPanel.width;
        this.img=img;
        height = DemoPanel.height;
        System.out.println("widthll::"+DemoPanel.width+"heightll::"+DemoPanel.height);
        this.PixelArray=pixelArray;
        edgesrc.setIcon(new ImageIcon(img));
        //jradiobutton2.setSelected(true);
       // thresholdActive = false;
        
        eseg = new CannyEdgeDetector();
        eseg.setSourceImage(img);
        processImage();

    }

    private void processImage() {
        
        
        //eseg.setSourceImage(img);
        eseg.process();
         edge = eseg.getEdgesImage();
        
        /* eseg.init(PixelArray, width, height);
        int[] res = eseg.process();
        res = threshold(res, threshold);
        final Image output = createImage(new MemoryImageSource(width, height, res, 0, width));
        outputImage = output;
        //conversion of image to buffered image
        bimage = new BufferedImage(outputImage.getWidth(null), outputImage.getHeight(null), BufferedImage.TYPE_INT_RGB);
        bimage.setRGB(0, 0, width, height, res, 0, width); */
        edgedest.setIcon(new ImageIcon(edge));

    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
       
       // lowslider = new javax.swing.JSlider();
        //highslider = new javax.swing.JSlider();
        bedgesave = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
         lowthresh = new javax.swing.JTextField();
         highthresh = new javax.swing.JTextField();
        edgesrc = new javax.swing.JLabel();
        edgedest = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edge Segmentation");
        setMinimumSize(new java.awt.Dimension(850, 600));
        setPreferredSize(new java.awt.Dimension(850, 600));
        getContentPane().setLayout(null);

        //jLabel1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel1.setText("Low Threshold");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(340, 400, 100, 30);

        
        /*
        highslider.setMajorTickSpacing(5);
        highslider.setMaximum(15);
        highslider.setMinimum(1);
        highslider.setMinorTickSpacing(1);
        highslider.setPaintLabels(true);
        highslider.setPaintTicks(true);
        highslider.setSnapToTicks(true);
        highslider.setValue(2);
        highslider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                edgesliderStateChanged(evt);
            }
        });
        getContentPane().add(highslider);
        highslider.setBounds(220, 450, 450, 50);
        
        
        lowslider.setMajorTickSpacing(5);
        lowslider.setMaximum(15);
        lowslider.setMinimum(1);
        lowslider.setMinorTickSpacing(1);
        lowslider.setPaintLabels(true);
        lowslider.setPaintTicks(true);
        lowslider.setSnapToTicks(true);
        lowslider.setValue(2);
        lowslider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                edgesliderStateChanged(evt);
            }
        });
        getContentPane().add(lowslider);
        lowslider.setBounds(220, 400, 450, 50); */

        bedgesave.setText("Save");
        bedgesave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bedgesaveActionPerformed(evt);
            }
        });
        getContentPane().add(bedgesave);
        bedgesave.setBounds(710, 400, 57, 23);

        jLabel2.setText("High Threshold");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(340, 440, 100, 30);

        
        
        
  lowthresh.setEditable(true);
        
        getContentPane().add(lowthresh);
        lowthresh.setBounds(440, 400, 100, 30);
 highthresh.setEditable(true);
        
        getContentPane().add(highthresh);
        highthresh.setBounds(440, 440, 100, 30);

        edgesrc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(edgesrc);
        edgesrc.setBounds(110, 100, 290, 170);

        edgedest.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(edgedest);
        edgedest.setBounds(470, 100, 300, 170);
        
        lowthresh.addKeyListener(new KeyAdapter(){
        public void keyPressed(KeyEvent ke)
        {
            if(ke.getKeyCode()==KeyEvent.VK_ENTER)
            {
                lowThreshold = Double.parseDouble(lowthresh.getText());
                eseg.setLowThreshold((float)lowThreshold);
                processImage();
            }
        }
        });
        
         highthresh.addKeyListener(new KeyAdapter(){
        public void keyPressed(KeyEvent ke)
        {
            if(ke.getKeyCode()==KeyEvent.VK_ENTER)
            {
                highThreshold = Double.parseDouble(highthresh.getText());
                eseg.setLowThreshold((float)highThreshold);
                processImage();
            }
        }
        });

        pack();
    }// </editor-fold>                        

   /* private void edgesliderStateChanged(javax.swing.event.ChangeEvent evt) {                                        

        
        JSlider source = (JSlider) evt.getSource();
        if(source==lowslider)
        {
            System.out.println("low threshold=" + source.getValue());  
            lowThreshold = (float) source.getValue();
            eseg.setLowThreshold(lowThreshold);
            //Tfthresh.setText("" + source.getValue());
            
        }
        else {
            System.out.println("high threshold=" + source.getValue());  
            highThreshold = (float) source.getValue();
            eseg.setHighThreshold(highThreshold);
           // Tfthresh.setText("" + source.getValue());
        }
        processImage();
    }           */                            
/*
    private void jradioButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
        thresholdActive = true;
        edgeslider.setEnabled(true);
    }                                             

    private void jradiobutton2ActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
        thresholdActive = false;
        edgeslider.setEnabled(false);
    }                  */                           

    private void bedgesaveActionPerformed(java.awt.event.ActionEvent evt) {
        
        EdgeArray=ReadWriteJPG.ReadPixels(edge, width, height);
        ReadWriteJPG.ConvertToImg(EdgeArray, width, height, "CannySegment.jpg");
        setVisible(false);
        (new ImageFusionFrame(PixelArray,EdgeArray,img)).setVisible(true);
    }                                         

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify                     
    private javax.swing.JButton bedgesave;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel edgedest;
     private javax.swing.JTextField lowthresh;
       private javax.swing.JTextField highthresh;
    //private javax.swing.JSlider lowslider;
   // private javax.swing.JSlider highslider;
    private javax.swing.JLabel edgesrc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    
    // End of variables declaration                   
}
